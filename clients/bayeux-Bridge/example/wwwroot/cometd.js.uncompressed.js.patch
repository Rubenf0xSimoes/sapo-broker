--- cometd.js.uncompressed.js	2009-08-20 12:02:34.000000000 +0100
+++ cometd_uncompressed_changed.js	2009-09-03 16:29:42.000000000 +0100
@@ -181,6 +181,7 @@
 			_deferredSubscribes: {},
 			_deferredUnsubscribes: {},
 			_subscriptions: [],
+			_rehandshaking: false, //  rehandshake started (in response of a 'advice' field with 'reconnect' equaling 'handshake'
 			_extendInList: [],	// List of functions invoked before delivering messages
 			_extendOutList: []	// List of functions invoked before sending messages
 			
@@ -273,15 +274,21 @@
 				dojo.mixin(bindArgs, bargs);
 			}
 			this._props = props;
-			for(var tname in this._subscriptions){
-				for(var sub in this._subscriptions[tname]){
-					if(this._subscriptions[tname][sub].topic){
-						dojo.unsubscribe(this._subscriptions[tname][sub].topic);
+			
+			if(! this._rehandshaking)
+			{
+			//change end
+				for(var tname in this._subscriptions){
+					for(var sub in this._subscriptions[tname]){
+						if(this._subscriptions[tname][sub].topic){
+							dojo.unsubscribe(this._subscriptions[tname][sub].topic);
+						}
 					}
 				}
+				this._messageQ = [];
+				this._subscriptions = [];		
 			}
-			this._messageQ = [];
-			this._subscriptions = [];
+			//change end
 			this._initialized = true;
 			this._status = "handshaking";
 			this.batch = 0;
@@ -682,6 +689,19 @@
 							}
 						}
  
+						if(this._rehandshaking)
+						{
+							// a rehandshaking just occured. Send subscriptions
+							for(var tname in this._subscriptions)
+							{
+								var props = {};
+								props.channel = "/meta/subscribe";
+								props.subscription = tname.substring(prefix.length,tname.length);
+								this._sendMessage(props);
+							}
+							this._rehandshaking = false; // end rehandshaking
+						}
+
 						if(this._initialized){
 							this._publishMeta("connect",message.successful, metaMsg);
 						}
@@ -921,6 +941,10 @@
 		}
 			
 		if((this._cometd._advice) && (this._cometd._advice["reconnect"]=="handshake")){
+
+			this._cometd._advice = null; // prevent continuous rehandshaking (with 'advice' field 'interval' frequency)
+			this._cometd._rehandshaking = true; // advert for rehandshaking begining
+
 			this._cometd._status="unconnected";
 			this._initialized = false;
 			this._cometd.init(this._cometd.url,this._cometd._props);
