package pt.sapo.services.definitions;

import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * Allows to obtain an authentication token for users SAPO (via email and password). This token can be used in services and / or operations that require some level of specific authorization.
 * 
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.4-b01 Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "STS", targetNamespace = "http://services.sapo.pt/definitions")
public class STS
		extends Service
{

	/*
	 * private final static URL STS_WSDL_LOCATION; private final static WebServiceException STS_EXCEPTION;
	 */
	private final static QName STS_QNAME = new QName("http://services.sapo.pt/definitions", "STS");

	public STS(URL wsdlLocation)
	{
		super(wsdlLocation, STS_QNAME);
	}

	public STS(URL wsdlLocation, WebServiceFeature... features)
	{
		super(wsdlLocation, STS_QNAME, features);
	}

	public STS(URL wsdlLocation, QName serviceName)
	{
		super(wsdlLocation, serviceName);
	}

	public STS(URL wsdlLocation, QName serviceName, WebServiceFeature... features)
	{
		super(wsdlLocation, serviceName, features);
	}

	/**
	 * 
	 * @return returns STSSoapSecure
	 */
	@WebEndpoint(name = "STSSoapSecure")
	public STSSoapSecure getSTSSoapSecure()
	{
		return super.getPort(new QName("http://services.sapo.pt/definitions", "STSSoapSecure"), STSSoapSecure.class);
	}

	/**
	 * 
	 * @param features
	 *            A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy. Supported features not in the <code>features</code> parameter will have their default values.
	 * @return returns STSSoapSecure
	 */
	@WebEndpoint(name = "STSSoapSecure")
	public STSSoapSecure getSTSSoapSecure(WebServiceFeature... features)
	{
		return super.getPort(new QName("http://services.sapo.pt/definitions", "STSSoapSecure"), STSSoapSecure.class, features);
	}

}
