package pt.sapo.services.definitions;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.4-b01 Generated source version: 2.2
 * 
 */
@WebService(name = "STSSoapSecure", targetNamespace = "http://services.sapo.pt/definitions")
@XmlSeeAlso({
		ObjectFactory.class
})
public interface STSSoapSecure
{

	/**
	 * Returns card information.
	 * 
	 * @param esbCredentials
	 * @param infoCardToken
	 * @return returns Claims
	 */
	@WebMethod(operationName = "GetInfoCardClaims", action = "http://services.sapo.pt/definitions/GetInfoCardClaims")
	@WebResult(name = "GetInfoCardClaimsResult", targetNamespace = "http://services.sapo.pt/definitions")
	@RequestWrapper(localName = "GetInfoCardClaims", targetNamespace = "http://services.sapo.pt/definitions", className = "GetInfoCardClaims")
	@ResponseWrapper(localName = "GetInfoCardClaimsResponse", targetNamespace = "http://services.sapo.pt/definitions", className = "GetInfoCardClaimsResponse")
	public Claims getInfoCardClaims(
			@WebParam(name = "ESBCredentials", targetNamespace = "http://services.sapo.pt/definitions") ESBCredentials esbCredentials,
			@WebParam(name = "InfoCardToken", targetNamespace = "http://services.sapo.pt/definitions") String infoCardToken);

	/**
	 * Returns user information, his primary id and a security token.
	 * 
	 * @param esbCredentials
	 * @param json
	 * @param userLoginCredentialsStore
	 * @param userLogin
	 * @param userType
	 * @return returns UserInfo
	 */
	@WebMethod(operationName = "GetPrimaryId", action = "http://services.sapo.pt/definitions/GetPrimaryId")
	@WebResult(name = "GetPrimaryIdResult", targetNamespace = "http://services.sapo.pt/definitions")
	@RequestWrapper(localName = "GetPrimaryId", targetNamespace = "http://services.sapo.pt/definitions", className = "GetPrimaryId")
	@ResponseWrapper(localName = "GetPrimaryIdResponse", targetNamespace = "http://services.sapo.pt/definitions", className = "GetPrimaryIdResponse")
	public UserInfo getPrimaryId(
			@WebParam(name = "ESBCredentials", targetNamespace = "http://services.sapo.pt/definitions") ESBCredentials esbCredentials,
			@WebParam(name = "UserLogin", targetNamespace = "http://services.sapo.pt/definitions") String userLogin,
			@WebParam(name = "JSON", targetNamespace = "http://services.sapo.pt/definitions") Boolean json,
			@WebParam(name = "UserType", targetNamespace = "http://services.sapo.pt/definitions") String userType,
			@WebParam(name = "UserLoginCredentialsStore", targetNamespace = "http://services.sapo.pt/definitions") String userLoginCredentialsStore);

	/**
	 * Returns user information, his primary id,a security token and additional attributes
	 * 
	 * @param esbCredentials
	 * @param json
	 * @param userLoginCredentialsStore
	 * @param userLogin
	 * @param userType
	 * @return returns UserInfo
	 */
	@WebMethod(operationName = "GetPrimaryIdDetails", action = "http://services.sapo.pt/definitions/GetPrimaryIdDetails")
	@WebResult(name = "GetPrimaryIdDetailsResult", targetNamespace = "http://services.sapo.pt/definitions")
	@RequestWrapper(localName = "GetPrimaryIdDetails", targetNamespace = "http://services.sapo.pt/definitions", className = "GetPrimaryIdDetails")
	@ResponseWrapper(localName = "GetPrimaryIdDetailsResponse", targetNamespace = "http://services.sapo.pt/definitions", className = "GetPrimaryIdDetailsResponse")
	public UserInfo getPrimaryIdDetails(
			@WebParam(name = "ESBCredentials", targetNamespace = "http://services.sapo.pt/definitions") ESBCredentials esbCredentials,
			@WebParam(name = "UserLogin", targetNamespace = "http://services.sapo.pt/definitions") String userLogin,
			@WebParam(name = "JSON", targetNamespace = "http://services.sapo.pt/definitions") Boolean json,
			@WebParam(name = "UserType", targetNamespace = "http://services.sapo.pt/definitions") String userType,
			@WebParam(name = "UserLoginCredentialsStore", targetNamespace = "http://services.sapo.pt/definitions") String userLoginCredentialsStore);

	/**
	 * Returns a revocable token if the specified username and password are valid
	 * 
	 * @param services
	 * @param application
	 * @param expirationDate
	 * @param esbCredentials
	 * @param extraInfo
	 * @param oAuthOptions
	 * @param userLogin
	 * @param userType
	 * @return returns RevokableToken
	 */
	@WebMethod(operationName = "GetRevokableToken", action = "http://services.sapo.pt/definitions/GetRevokableToken")
	@WebResult(name = "GetRevokableTokenResult", targetNamespace = "http://services.sapo.pt/definitions")
	@RequestWrapper(localName = "GetRevokableToken", targetNamespace = "http://services.sapo.pt/definitions", className = "GetRevokableToken")
	@ResponseWrapper(localName = "GetRevokableTokenResponse", targetNamespace = "http://services.sapo.pt/definitions", className = "GetRevokableTokenResponse")
	public RevokableToken getRevokableToken(
			@WebParam(name = "ESBCredentials", targetNamespace = "http://services.sapo.pt/definitions") ESBCredentials esbCredentials,
			@WebParam(name = "UserLogin", targetNamespace = "http://services.sapo.pt/definitions") String userLogin,
			@WebParam(name = "UserType", targetNamespace = "http://services.sapo.pt/definitions") String userType,
			@WebParam(name = "Application", targetNamespace = "http://services.sapo.pt/definitions") String application,
			@WebParam(name = "ExpirationDate", targetNamespace = "http://services.sapo.pt/definitions") XMLGregorianCalendar expirationDate,
			@WebParam(name = "Services", targetNamespace = "http://services.sapo.pt/definitions") Services services,
			@WebParam(name = "ExtraInfo", targetNamespace = "http://services.sapo.pt/definitions") String extraInfo,
			@WebParam(name = "OAuthOptions", targetNamespace = "http://services.sapo.pt/definitions") String oAuthOptions);

	/**
	 * Returns the roles associated with the user basead on his token
	 * 
	 * @param esbCredentials
	 * @param userToken
	 * @return returns ESBRoles
	 */
	@WebMethod(operationName = "GetRoles", action = "http://services.sapo.pt/definitions/GetRoles")
	@WebResult(name = "GetRolesResult", targetNamespace = "http://services.sapo.pt/definitions")
	@RequestWrapper(localName = "GetRoles", targetNamespace = "http://services.sapo.pt/definitions", className = "GetRoles")
	@ResponseWrapper(localName = "GetRolesResponse", targetNamespace = "http://services.sapo.pt/definitions", className = "GetRolesResponse")
	public ESBRoles getRoles(
			@WebParam(name = "ESBCredentials", targetNamespace = "http://services.sapo.pt/definitions") ESBCredentials esbCredentials,
			@WebParam(name = "UserToken", targetNamespace = "http://services.sapo.pt/definitions") String userToken);

	/**
	 * Returns a token if the specified username and password are valid
	 * 
	 * @param esbCredentials
	 * @param json
	 * @return returns java.lang.String
	 */
	@WebMethod(operationName = "GetToken", action = "http://services.sapo.pt/definitions/GetToken")
	@WebResult(name = "GetTokenResult", targetNamespace = "http://services.sapo.pt/definitions")
	@RequestWrapper(localName = "GetToken", targetNamespace = "http://services.sapo.pt/definitions", className = "GetToken")
	@ResponseWrapper(localName = "GetTokenResponse", targetNamespace = "http://services.sapo.pt/definitions", className = "GetTokenResponse")
	public String getToken(
			@WebParam(name = "ESBCredentials", targetNamespace = "http://services.sapo.pt/definitions") ESBCredentials esbCredentials,
			@WebParam(name = "JSON", targetNamespace = "http://services.sapo.pt/definitions") Boolean json);

	/**
	 * Returns a list of revocable tokens of an user.
	 * 
	 * @param application
	 * @param esbCredentials
	 * @param userLogin
	 * @param userType
	 * @return returns RevokableTokens
	 */
	@WebMethod(operationName = "ListRevokableTokens", action = "http://services.sapo.pt/definitions/ListRevokableTokens")
	@WebResult(name = "ListRevokableTokensResult", targetNamespace = "http://services.sapo.pt/definitions")
	@RequestWrapper(localName = "ListRevokableTokens", targetNamespace = "http://services.sapo.pt/definitions", className = "ListRevokableTokens")
	@ResponseWrapper(localName = "ListRevokableTokensResponse", targetNamespace = "http://services.sapo.pt/definitions", className = "ListRevokableTokensResponse")
	public RevokableTokens listRevokableTokens(
			@WebParam(name = "ESBCredentials", targetNamespace = "http://services.sapo.pt/definitions") ESBCredentials esbCredentials,
			@WebParam(name = "UserLogin", targetNamespace = "http://services.sapo.pt/definitions") String userLogin,
			@WebParam(name = "UserType", targetNamespace = "http://services.sapo.pt/definitions") String userType,
			@WebParam(name = "Application", targetNamespace = "http://services.sapo.pt/definitions") String application);

	/**
	 * Revoke the token
	 * 
	 * @param guid
	 * @param esbCredentials
	 * @param userLogin
	 * @return returns RevokeTokenInfo
	 */
	@WebMethod(operationName = "RevokeToken", action = "http://services.sapo.pt/definitions/RevokeToken")
	@WebResult(name = "RevokeTokenResult", targetNamespace = "http://services.sapo.pt/definitions")
	@RequestWrapper(localName = "RevokeToken", targetNamespace = "http://services.sapo.pt/definitions", className = "RevokeToken")
	@ResponseWrapper(localName = "RevokeTokenResponse", targetNamespace = "http://services.sapo.pt/definitions", className = "RevokeTokenResponse")
	public RevokeTokenInfo revokeToken(
			@WebParam(name = "ESBCredentials", targetNamespace = "http://services.sapo.pt/definitions") ESBCredentials esbCredentials,
			@WebParam(name = "Guid", targetNamespace = "http://services.sapo.pt/definitions") String guid,
			@WebParam(name = "UserLogin", targetNamespace = "http://services.sapo.pt/definitions") String userLogin);

	/**
	 * Validates a token
	 * 
	 * @param esbCredentials
	 * @return returns TokenInfo
	 */
	@WebMethod(operationName = "ValidateToken", action = "http://services.sapo.pt/definitions/ValidateToken")
	@WebResult(name = "ValidateTokenResult", targetNamespace = "http://services.sapo.pt/definitions")
	@RequestWrapper(localName = "ValidateToken", targetNamespace = "http://services.sapo.pt/definitions", className = "ValidateToken")
	@ResponseWrapper(localName = "ValidateTokenResponse", targetNamespace = "http://services.sapo.pt/definitions", className = "ValidateTokenResponse")
	public TokenInfo validateToken(
			@WebParam(name = "ESBCredentials", targetNamespace = "http://services.sapo.pt/definitions") ESBCredentials esbCredentials);

}
